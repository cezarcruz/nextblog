[
  {
    "title": "Testes parametrizados com Junit 5",
    "date": "2020-06-04T00:00:00.000Z",
    "tags": [
      "java",
      "junit"
    ],
    "draft": false,
    "summary": "Com a versão mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um método, é possível fazer testes em vários cenários.",
    "images": [
      "/static/images/og/header_java_og.png"
    ],
    "body": {
      "raw": "\nCom a versão mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um método, é possível fazer testes em vários cenários.\n\nNeste post vamos ver dois cenários:\n\n[@CsvSource](https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/CsvSource.html)\n\n[@ValueSource](https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/ValueSource.html)\n\nInicialmente a dependência do Junit em seu projeto deve estar assim:\n\n```xml\n<dependency>\n    <groupId>org.junit.jupiter</groupId>\n    <artifactId>junit-jupiter</artifactId>\n    <version>5.6.2</version>\n    <scope>test</scope>\n</dependency>\n```\n\nCom a dependência correta, o nosso primeiro teste já pode ser escrito:\n\n```java\n@ParameterizedTest\n  @CsvSource({\n      \"AAA,AAA\",\n      \"ALL,ALL\",\n      \"VMM,VMM\"\n  })\n  public void deveChecarValor(final String input, final String expected) {\n    assertEquals(expected, input);\n  }\n```\n\n- **@CsvSource** recebe um array de valores em formato \"CSV\".\n- Repare que nosso teste é anotado com **@ParameterizedTest**.\n- O método tem duas entradas que representam os valores separados por \",\".\n- Também é possível fazer o teste usando um arquivo \".csv\"\n  - @CsvFileSource(resources = \"arquivo.csv\", numLinesToSkip = 1)\n    - **resouces**: é o nome do arquivo\n    - **numLinesToSkip**: arquivos csv iniciando com o cabeçalho na primeira linha, se esse for o caso, esse parâmetro diz para pular a primeira linha, ou o número de linhas passado como valor.\n\nO método é executado 3 vezes, cada uma passando os valores por linhas, e caso tenha algum erro em um dos cenários, o Junit mostra qual deles deu erro:\n\n```java\n@ParameterizedTest\n@CsvSource({\n    \"AAA,AAA\",\n    \"ALL,AYY\",\n    \"VMM,VMM\"\n})\npublic void deveChecarValor(final String input, final String expected) {\n    assertEquals(expected, input);\n}\n```\n\nResultado:\n\n```java\norg.opentest4j.AssertionFailedError:\nExpected :AYY\nActual   :ALL\n```\n\nA outra interface que podemos utilizar é a **@ValueSource**:\n\n```java\n@ParameterizedTest\n@ValueSource(ints = {\n    2,\n    4,\n    6\n})\npublic void numerosPares(final Integer input) {\n    assertEquals(0, input % 2);\n}\n```\n\n- **@ValueSource** recebe o tipo e um array com os valores\n  - Os tipos podem ser:\n    - ints\n    - strings\n    - booleans\n    - byte\n    - char\n    - double\n    - short\n    - etc....\n\nA ideia é a mesma do **@CsvSource** mas recebendo apenas um valor.\n",
      "code": "var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var N=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),k=(a,s)=>{for(var c in s)i(a,c,{get:s[c],enumerable:!0})},t=(a,s,c,e)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let l of m(s))!h.call(a,l)&&l!==c&&i(a,l,{get:()=>s[l],enumerable:!(e=p(s,l))||e.enumerable});return a};var g=(a,s,c)=>(c=a!=null?d(u(a)):{},t(s||!a||!a.__esModule?i(c,\"default\",{value:a,enumerable:!0}):c,a)),v=a=>t(i({},\"__esModule\",{value:!0}),a);var r=N((y,o)=>{o.exports=_jsx_runtime});var S={};k(S,{default:()=>A,frontmatter:()=>j});var n=g(r()),j={title:\"Testes parametrizados com Junit 5\",date:\"2020-06-04\",tags:[\"java\",\"junit\"],images:[\"/static/images/og/header_java_og.png\"],draft:!1,summary:'Com a vers\\xE3o mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um m\\xE9todo, \\xE9 poss\\xEDvel fazer testes em v\\xE1rios cen\\xE1rios.'};function f(a={}){let{wrapper:s}=a.components||{};return s?(0,n.jsx)(s,Object.assign({},a,{children:(0,n.jsx)(c,{})})):c();function c(){let e=Object.assign({p:\"p\",a:\"a\",pre:\"pre\",code:\"code\",span:\"span\",ul:\"ul\",li:\"li\",strong:\"strong\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:'Com a vers\\xE3o mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um m\\xE9todo, \\xE9 poss\\xEDvel fazer testes em v\\xE1rios cen\\xE1rios.'}),(0,n.jsx)(e.p,{children:\"Neste post vamos ver dois cen\\xE1rios:\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/CsvSource.html\",children:\"@CsvSource\"})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/ValueSource.html\",children:\"@ValueSource\"})}),(0,n.jsx)(e.p,{children:\"Inicialmente a depend\\xEAncia do Junit em seu projeto deve estar assim:\"}),(0,n.jsx)(e.pre,{className:\"language-xml\",children:(0,n.jsxs)(e.code,{className:\"code-highlight language-xml\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"dependency\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"groupId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"org.junit.jupiter\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"groupId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"artifactId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"junit-jupiter\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"artifactId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"version\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"5.6.2\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"version\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"scope\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"test\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"scope\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"dependency\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]})]})}),(0,n.jsx)(e.p,{children:\"Com a depend\\xEAncia correta, o nosso primeiro teste j\\xE1 pode ser escrito:\"}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ParameterizedTest\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@CsvSource\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"AAA,AAA\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"ALL,ALL\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"VMM,VMM\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"deveChecarValor\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token function\",children:\"assertEquals\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"@CsvSource\"}),' recebe um array de valores em formato \"CSV\".']}),(0,n.jsxs)(e.li,{children:[\"Repare que nosso teste \\xE9 anotado com \",(0,n.jsx)(e.strong,{children:\"@ParameterizedTest\"}),\".\"]}),(0,n.jsx)(e.li,{children:'O m\\xE9todo tem duas entradas que representam os valores separados por \",\".'}),(0,n.jsxs)(e.li,{children:['Tamb\\xE9m \\xE9 poss\\xEDvel fazer o teste usando um arquivo \".csv\"',(0,n.jsx)(e.ul,{children:(0,n.jsxs)(e.li,{children:['@CsvFileSource(resources = \"arquivo.csv\", numLinesToSkip = 1)',(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"resouces\"}),\": \\xE9 o nome do arquivo\"]}),(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"numLinesToSkip\"}),\": arquivos csv iniciando com o cabe\\xE7alho na primeira linha, se esse for o caso, esse par\\xE2metro diz para pular a primeira linha, ou o n\\xFAmero de linhas passado como valor.\"]})]})]})})]})]}),(0,n.jsx)(e.p,{children:\"O m\\xE9todo \\xE9 executado 3 vezes, cada uma passando os valores por linhas, e caso tenha algum erro em um dos cen\\xE1rios, o Junit mostra qual deles deu erro:\"}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ParameterizedTest\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@CsvSource\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"AAA,AAA\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"ALL,AYY\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"VMM,VMM\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"deveChecarValor\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token function\",children:\"assertEquals\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,n.jsx)(e.p,{children:\"Resultado:\"}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token class-name\",children:[(0,n.jsxs)(e.span,{className:\"token namespace\",children:[\"org\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"opentest4j\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"})]}),\"AssertionFailedError\"]}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Expected\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),`AYY\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Actual\"}),\"   \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),`ALL\n`]})]})}),(0,n.jsxs)(e.p,{children:[\"A outra interface que podemos utilizar \\xE9 a \",(0,n.jsx)(e.strong,{children:\"@ValueSource\"}),\":\"]}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ParameterizedTest\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ValueSource\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"ints \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token number\",children:\"2\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token number\",children:\"4\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token number\",children:\"6\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"numerosPares\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Integer\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token function\",children:\"assertEquals\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"0\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" input \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"%\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"2\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,n.jsx)(e.ul,{children:(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"@ValueSource\"}),\" recebe o tipo e um array com os valores\",(0,n.jsx)(e.ul,{children:(0,n.jsxs)(e.li,{children:[\"Os tipos podem ser:\",(0,n.jsxs)(e.ul,{children:[(0,n.jsx)(e.li,{children:\"ints\"}),(0,n.jsx)(e.li,{children:\"strings\"}),(0,n.jsx)(e.li,{children:\"booleans\"}),(0,n.jsx)(e.li,{children:\"byte\"}),(0,n.jsx)(e.li,{children:\"char\"}),(0,n.jsx)(e.li,{children:\"double\"}),(0,n.jsx)(e.li,{children:\"short\"}),(0,n.jsx)(e.li,{children:\"etc....\"})]})]})})]})}),(0,n.jsxs)(e.p,{children:[\"A ideia \\xE9 a mesma do \",(0,n.jsx)(e.strong,{children:\"@CsvSource\"}),\" mas recebendo apenas um valor.\"]})]})}}var A=f;return v(S);})();\n;return Component;"
    },
    "_id": "blog/testes-parametrizados-com-junit5.mdx",
    "_raw": {
      "sourceFilePath": "blog/testes-parametrizados-com-junit5.mdx",
      "sourceFileName": "testes-parametrizados-com-junit5.mdx",
      "sourceFileDir": "blog",
      "contentType": "mdx",
      "flattenedPath": "blog/testes-parametrizados-com-junit5"
    },
    "type": "Blog",
    "readingTime": {
      "text": "2 min read",
      "minutes": 1.525,
      "time": 91500,
      "words": 305
    },
    "slug": "testes-parametrizados-com-junit5",
    "toc": []
  }
]