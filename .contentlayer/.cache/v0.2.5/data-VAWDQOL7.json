{
  "cacheItemsMap": {
    "authors/default.mdx": {
      "document": {
        "name": "Tails Azimuth",
        "avatar": "/static/images/avatar.png",
        "occupation": "Professor of Atmospheric Science",
        "company": "Stanford University",
        "email": "address@yoursite.com",
        "twitter": "https://twitter.com/Twitter",
        "linkedin": "https://www.linkedin.com",
        "github": "https://github.com",
        "body": {
          "raw": "\nTails Azimuth is a professor of atmospheric sciences at the Stanford AI Lab. His research interests includes complexity modelling of tailwinds, headwinds and crosswinds.\n\nHe leads the clean energy group which develops 3D air pollution-climate models, writes differential equation solvers, and manufactures titanium plated air ballons. In his free time he bakes raspberry pi.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n",
          "code": "var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var f=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),g=(e,t)=>{for(var i in t)r(e,i,{get:t[i],enumerable:!0})},o=(e,t,i,a)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let n of p(t))!h.call(e,n)&&n!==i&&r(e,n,{get:()=>t[n],enumerable:!(a=m(t,n))||a.enumerable});return e};var w=(e,t,i)=>(i=e!=null?u(d(e)):{},o(t||!e||!e.__esModule?r(i,\"default\",{value:e,enumerable:!0}):i,e)),x=e=>o(r({},\"__esModule\",{value:!0}),e);var l=f((q,c)=>{c.exports=_jsx_runtime});var y={};g(y,{default:()=>j,frontmatter:()=>b});var s=w(l()),b={name:\"Tails Azimuth\",avatar:\"/static/images/avatar.png\",occupation:\"Professor of Atmospheric Science\",company:\"Stanford University\",email:\"address@yoursite.com\",twitter:\"https://twitter.com/Twitter\",linkedin:\"https://www.linkedin.com\",github:\"https://github.com\"};function v(e={}){let{wrapper:t}=e.components||{};return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(i,{})})):i();function i(){let a=Object.assign({p:\"p\"},e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:\"Tails Azimuth is a professor of atmospheric sciences at the Stanford AI Lab. His research interests includes complexity modelling of tailwinds, headwinds and crosswinds.\"}),(0,s.jsx)(a.p,{children:\"He leads the clean energy group which develops 3D air pollution-climate models, writes differential equation solvers, and manufactures titanium plated air ballons. In his free time he bakes raspberry pi.\"}),(0,s.jsx)(a.p,{children:\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\"})]})}}var j=v;return x(y);})();\n;return Component;"
        },
        "_id": "authors/default.mdx",
        "_raw": {
          "sourceFilePath": "authors/default.mdx",
          "sourceFileName": "default.mdx",
          "sourceFileDir": "authors",
          "contentType": "mdx",
          "flattenedPath": "authors/default"
        },
        "type": "Authors",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.45,
          "time": 27000,
          "words": 90
        },
        "slug": "default",
        "toc": []
      },
      "documentHash": "1653718961000",
      "hasWarnings": false,
      "documentTypeName": "Authors"
    },
    "authors/sparrowhawk.mdx": {
      "document": {
        "name": "Sparrow Hawk",
        "avatar": "/static/images/sparrowhawk-avatar.jpg",
        "occupation": "Wizard of Earthsea",
        "company": "Earthsea",
        "twitter": "https://twitter.com/sparrowhawk",
        "linkedin": "https://www.linkedin.com/sparrowhawk",
        "body": {
          "raw": "\nAt birth, Ged was given the child-name Duny by his mother. He was born on the island of Gont, as a son of a bronzesmith. His mother died before he reached the age of one. As a small boy, Ged had overheard the village witch, his maternal aunt, using various words of power to call goats. Ged later used the words without an understanding of their meanings, to surprising effect.\n\nThe witch knew that using words of power effectively without understanding them required innate power, so she endeavored to teach him what little she knew. After learning more from her, he was able to call animals to him. Particularly, he was seen in the company of wild sparrowhawks so often that his \"use name\" became Sparrowhawk.\n",
          "code": "var Component=(()=>{var c=Object.create;var s=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var u=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),f=(e,t)=>{for(var a in t)s(e,a,{get:t[a],enumerable:!0})},i=(e,t,a,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of m(t))!p.call(e,o)&&o!==a&&s(e,o,{get:()=>t[o],enumerable:!(r=d(t,o))||r.enumerable});return e};var g=(e,t,a)=>(a=e!=null?c(l(e)):{},i(t||!e||!e.__esModule?s(a,\"default\",{value:e,enumerable:!0}):a,e)),b=e=>i(s({},\"__esModule\",{value:!0}),e);var w=u((_,h)=>{h.exports=_jsx_runtime});var v={};f(v,{default:()=>j,frontmatter:()=>k});var n=g(w()),k={name:\"Sparrow Hawk\",avatar:\"/static/images/sparrowhawk-avatar.jpg\",occupation:\"Wizard of Earthsea\",company:\"Earthsea\",twitter:\"https://twitter.com/sparrowhawk\",linkedin:\"https://www.linkedin.com/sparrowhawk\"};function x(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(a,{})})):a();function a(){let r=Object.assign({p:\"p\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:\"At birth, Ged was given the child-name Duny by his mother. He was born on the island of Gont, as a son of a bronzesmith. His mother died before he reached the age of one. As a small boy, Ged had overheard the village witch, his maternal aunt, using various words of power to call goats. Ged later used the words without an understanding of their meanings, to surprising effect.\"}),(0,n.jsx)(r.p,{children:'The witch knew that using words of power effectively without understanding them required innate power, so she endeavored to teach him what little she knew. After learning more from her, he was able to call animals to him. Particularly, he was seen in the company of wild sparrowhawks so often that his \"use name\" became Sparrowhawk.'})]})}}var j=x;return b(v);})();\n;return Component;"
        },
        "_id": "authors/sparrowhawk.mdx",
        "_raw": {
          "sourceFilePath": "authors/sparrowhawk.mdx",
          "sourceFileName": "sparrowhawk.mdx",
          "sourceFileDir": "authors",
          "contentType": "mdx",
          "flattenedPath": "authors/sparrowhawk"
        },
        "type": "Authors",
        "readingTime": {
          "text": "1 min read",
          "minutes": 0.63,
          "time": 37800,
          "words": 126
        },
        "slug": "sparrowhawk",
        "toc": []
      },
      "documentHash": "1653718961000",
      "hasWarnings": false,
      "documentTypeName": "Authors"
    },
    "blog/testes-parametrizados-com-junit5.mdx": {
      "document": {
        "title": "Testes parametrizados com Junit 5",
        "date": "2020-06-04T00:00:00.000Z",
        "tags": [
          "java",
          "junit"
        ],
        "draft": false,
        "summary": "Com a versão mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um método, é possível fazer testes em vários cenários.",
        "images": [
          "/static/images/og/header_java_og.png"
        ],
        "body": {
          "raw": "\nCom a versão mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um método, é possível fazer testes em vários cenários.\n\nNeste post vamos ver dois cenários:\n\n[@CsvSource](https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/CsvSource.html)\n\n[@ValueSource](https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/ValueSource.html)\n\nInicialmente a dependência do Junit em seu projeto deve estar assim:\n\n```xml\n<dependency>\n    <groupId>org.junit.jupiter</groupId>\n    <artifactId>junit-jupiter</artifactId>\n    <version>5.6.2</version>\n    <scope>test</scope>\n</dependency>\n```\n\nCom a dependência correta, o nosso primeiro teste já pode ser escrito:\n\n```java\n@ParameterizedTest\n  @CsvSource({\n      \"AAA,AAA\",\n      \"ALL,ALL\",\n      \"VMM,VMM\"\n  })\n  public void deveChecarValor(final String input, final String expected) {\n    assertEquals(expected, input);\n  }\n```\n\n- **@CsvSource** recebe um array de valores em formato \"CSV\".\n- Repare que nosso teste é anotado com **@ParameterizedTest**.\n- O método tem duas entradas que representam os valores separados por \",\".\n- Também é possível fazer o teste usando um arquivo \".csv\"\n  - @CsvFileSource(resources = \"arquivo.csv\", numLinesToSkip = 1)\n    - **resouces**: é o nome do arquivo\n    - **numLinesToSkip**: arquivos csv iniciando com o cabeçalho na primeira linha, se esse for o caso, esse parâmetro diz para pular a primeira linha, ou o número de linhas passado como valor.\n\nO método é executado 3 vezes, cada uma passando os valores por linhas, e caso tenha algum erro em um dos cenários, o Junit mostra qual deles deu erro:\n\n```java\n@ParameterizedTest\n@CsvSource({\n    \"AAA,AAA\",\n    \"ALL,AYY\",\n    \"VMM,VMM\"\n})\npublic void deveChecarValor(final String input, final String expected) {\n    assertEquals(expected, input);\n}\n```\n\nResultado:\n\n```java\norg.opentest4j.AssertionFailedError:\nExpected :AYY\nActual   :ALL\n```\n\nA outra interface que podemos utilizar é a **@ValueSource**:\n\n```java\n@ParameterizedTest\n@ValueSource(ints = {\n    2,\n    4,\n    6\n})\npublic void numerosPares(final Integer input) {\n    assertEquals(0, input % 2);\n}\n```\n\n- **@ValueSource** recebe o tipo e um array com os valores\n  - Os tipos podem ser:\n    - ints\n    - strings\n    - booleans\n    - byte\n    - char\n    - double\n    - short\n    - etc....\n\nA ideia é a mesma do **@CsvSource** mas recebendo apenas um valor.\n",
          "code": "var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var N=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),k=(a,s)=>{for(var c in s)i(a,c,{get:s[c],enumerable:!0})},t=(a,s,c,e)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let l of m(s))!h.call(a,l)&&l!==c&&i(a,l,{get:()=>s[l],enumerable:!(e=p(s,l))||e.enumerable});return a};var g=(a,s,c)=>(c=a!=null?d(u(a)):{},t(s||!a||!a.__esModule?i(c,\"default\",{value:a,enumerable:!0}):c,a)),v=a=>t(i({},\"__esModule\",{value:!0}),a);var r=N((y,o)=>{o.exports=_jsx_runtime});var S={};k(S,{default:()=>A,frontmatter:()=>j});var n=g(r()),j={title:\"Testes parametrizados com Junit 5\",date:\"2020-06-04\",tags:[\"java\",\"junit\"],images:[\"/static/images/og/header_java_og.png\"],draft:!1,summary:'Com a vers\\xE3o mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um m\\xE9todo, \\xE9 poss\\xEDvel fazer testes em v\\xE1rios cen\\xE1rios.'};function f(a={}){let{wrapper:s}=a.components||{};return s?(0,n.jsx)(s,Object.assign({},a,{children:(0,n.jsx)(c,{})})):c();function c(){let e=Object.assign({p:\"p\",a:\"a\",pre:\"pre\",code:\"code\",span:\"span\",ul:\"ul\",li:\"li\",strong:\"strong\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:'Com a vers\\xE3o mais recente do Junit ficou muito simples de fazer testes \"parametrizados\", onde, com apenas um m\\xE9todo, \\xE9 poss\\xEDvel fazer testes em v\\xE1rios cen\\xE1rios.'}),(0,n.jsx)(e.p,{children:\"Neste post vamos ver dois cen\\xE1rios:\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/CsvSource.html\",children:\"@CsvSource\"})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://junit.org/junit5/docs/current/api/org.junit.jupiter.params/org/junit/jupiter/params/provider/ValueSource.html\",children:\"@ValueSource\"})}),(0,n.jsx)(e.p,{children:\"Inicialmente a depend\\xEAncia do Junit em seu projeto deve estar assim:\"}),(0,n.jsx)(e.pre,{className:\"language-xml\",children:(0,n.jsxs)(e.code,{className:\"code-highlight language-xml\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"dependency\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"groupId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"org.junit.jupiter\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"groupId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"artifactId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"junit-jupiter\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"artifactId\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"version\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"5.6.2\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"version\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"<\"}),\"scope\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),\"test\",(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"scope\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsxs)(e.span,{className:\"token tag\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"</\"}),\"dependency\"]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]})]})}),(0,n.jsx)(e.p,{children:\"Com a depend\\xEAncia correta, o nosso primeiro teste j\\xE1 pode ser escrito:\"}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ParameterizedTest\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@CsvSource\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"AAA,AAA\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"ALL,ALL\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"VMM,VMM\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"deveChecarValor\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token function\",children:\"assertEquals\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"@CsvSource\"}),' recebe um array de valores em formato \"CSV\".']}),(0,n.jsxs)(e.li,{children:[\"Repare que nosso teste \\xE9 anotado com \",(0,n.jsx)(e.strong,{children:\"@ParameterizedTest\"}),\".\"]}),(0,n.jsx)(e.li,{children:'O m\\xE9todo tem duas entradas que representam os valores separados por \",\".'}),(0,n.jsxs)(e.li,{children:['Tamb\\xE9m \\xE9 poss\\xEDvel fazer o teste usando um arquivo \".csv\"',(0,n.jsx)(e.ul,{children:(0,n.jsxs)(e.li,{children:['@CsvFileSource(resources = \"arquivo.csv\", numLinesToSkip = 1)',(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"resouces\"}),\": \\xE9 o nome do arquivo\"]}),(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"numLinesToSkip\"}),\": arquivos csv iniciando com o cabe\\xE7alho na primeira linha, se esse for o caso, esse par\\xE2metro diz para pular a primeira linha, ou o n\\xFAmero de linhas passado como valor.\"]})]})]})})]})]}),(0,n.jsx)(e.p,{children:\"O m\\xE9todo \\xE9 executado 3 vezes, cada uma passando os valores por linhas, e caso tenha algum erro em um dos cen\\xE1rios, o Junit mostra qual deles deu erro:\"}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ParameterizedTest\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@CsvSource\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"AAA,AAA\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"ALL,AYY\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"VMM,VMM\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"deveChecarValor\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"String\"}),\" expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token function\",children:\"assertEquals\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,n.jsx)(e.p,{children:\"Resultado:\"}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsxs)(e.span,{className:\"token class-name\",children:[(0,n.jsxs)(e.span,{className:\"token namespace\",children:[\"org\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"opentest4j\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"})]}),\"AssertionFailedError\"]}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Expected\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),`AYY\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Actual\"}),\"   \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),`ALL\n`]})]})}),(0,n.jsxs)(e.p,{children:[\"A outra interface que podemos utilizar \\xE9 a \",(0,n.jsx)(e.strong,{children:\"@ValueSource\"}),\":\"]}),(0,n.jsx)(e.pre,{className:\"language-java\",children:(0,n.jsxs)(e.code,{className:\"language-java code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ParameterizedTest\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation annotation\",children:\"@ValueSource\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"ints \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token number\",children:\"2\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token number\",children:\"4\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token number\",children:\"6\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"numerosPares\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"final\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Integer\"}),\" input\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token function\",children:\"assertEquals\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"0\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" input \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"%\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"2\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,n.jsx)(e.ul,{children:(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"@ValueSource\"}),\" recebe o tipo e um array com os valores\",(0,n.jsx)(e.ul,{children:(0,n.jsxs)(e.li,{children:[\"Os tipos podem ser:\",(0,n.jsxs)(e.ul,{children:[(0,n.jsx)(e.li,{children:\"ints\"}),(0,n.jsx)(e.li,{children:\"strings\"}),(0,n.jsx)(e.li,{children:\"booleans\"}),(0,n.jsx)(e.li,{children:\"byte\"}),(0,n.jsx)(e.li,{children:\"char\"}),(0,n.jsx)(e.li,{children:\"double\"}),(0,n.jsx)(e.li,{children:\"short\"}),(0,n.jsx)(e.li,{children:\"etc....\"})]})]})})]})}),(0,n.jsxs)(e.p,{children:[\"A ideia \\xE9 a mesma do \",(0,n.jsx)(e.strong,{children:\"@CsvSource\"}),\" mas recebendo apenas um valor.\"]})]})}}var A=f;return v(S);})();\n;return Component;"
        },
        "_id": "blog/testes-parametrizados-com-junit5.mdx",
        "_raw": {
          "sourceFilePath": "blog/testes-parametrizados-com-junit5.mdx",
          "sourceFileName": "testes-parametrizados-com-junit5.mdx",
          "sourceFileDir": "blog",
          "contentType": "mdx",
          "flattenedPath": "blog/testes-parametrizados-com-junit5"
        },
        "type": "Blog",
        "readingTime": {
          "text": "2 min read",
          "minutes": 1.525,
          "time": 91500,
          "words": 305
        },
        "slug": "testes-parametrizados-com-junit5",
        "toc": []
      },
      "documentHash": "1687535336134",
      "hasWarnings": false,
      "documentTypeName": "Blog"
    }
  }
}
